on:
  push:
    branches:
    - master
    - release-*
    - '!release-1.6'
    tags:
    - '*.*.*'
  pull_request:
jobs:
  build:
    runs-on: windows-latest
    env:
      MyGet_API_Key: ${{ secrets.MyGet_API_Key }}
      Configuration: Release
      Solution_Path: src\Radical.Windows.sln
      Test_Project_Path: src\Radical.Windows.Tests\Radical.Windows.Tests.csproj
      Wpf_Project_Path: src\Radical.Windows\Radical.Windows.csproj
      Bin_Folder: src\Radical.Windows\Bin
      GITHUB_PULL_REQUEST_NUMBER: ${{ github.event.number }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Echo PR number
        run: echo  $env:GITHUB_PULL_REQUEST_NUMBER
        
      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.100
        
      # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.0
      
      # Restore the application
      - name:  Restore the Wpf application to populate the obj folder
        run: msbuild $env:Solution_Path /t:Restore /p:Configuration=$env:Configuration
        
      # Build the Windows Application Packaging project
      - name: Build Solution
        run: msbuild $env:Solution_Path /p:Configuration=$env:Configuration
      
      # Test
      - name: Execute Unit Tests
        run: dotnet test $env:Test_Project_Path --no-build --configuration $env:Configuration

      # Push to Myget
      - name: Push to Myget
        run: dotnet nuget push $env:Bin_Folder\$env:Configuration\*.nupkg --skip-duplicate --source https://www.myget.org/F/radical-unstable/api/v2/package --api-key $env:MyGet_API_Key
